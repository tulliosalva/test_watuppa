import { ref as w, computed as L, watch as S, onBeforeMount as A, openBlock as s, createElementBlock as o, normalizeClass as B, createElementVNode as n, withDirectives as _, vModelText as M, Fragment as P, renderList as k, toDisplayString as c, unref as i, createCommentVNode as h, createTextVNode as O, isRef as U, vModelSelect as R } from "vue";
const $ = (u, m) => {
  const T = u.__vccOpts || u;
  for (const [x, b] of m)
    T[x] = b;
  return T;
}, j = { id: "isSearchable" }, q = ["placeholder"], E = { "aria-hidden": "true" }, F = {
  key: 0,
  class: "noData"
}, G = {
  key: 0,
  value: "-1"
}, H = ["selected"], J = { class: "arrows" }, K = { key: 1 }, Q = {
  __name: "VueLatestTable",
  props: {
    headers: {
      type: Array,
      required: !0
    },
    data: {
      type: Array,
      required: !0
    },
    isSearchable: Boolean,
    searchPlaceholder: String,
    footer: { type: Object, default: {} },
    defaultTheme: Boolean,
    noData: {
      type: String,
      default: "No data found"
    },
    rowsPerPageText: { type: String, default: "Rows per page" }
  },
  setup(u) {
    const m = u, T = {
      allText: "All"
    }, x = [10, 25, 50, -1], b = w([]), v = w(1), D = L(() => {
      const l = r.value * (v.value - 1) + 1;
      let e = v.value * r.value;
      return (e > g.value || e < 0) && (e = g.value), { start: l, end: e };
    }), g = w(0), y = w(""), a = m.footer || {};
    let p = w([]), r = w(x[0]);
    const N = L(() => g.value % r.value === 0 ? g.value / r.value : Math.trunc(g.value / r.value) + 1), V = (l = r.value, e = m.data, d = y == null ? void 0 : y.value, t = !1) => {
      let f = !1;
      !t && d && (e = I(e, d)), b.value = e, g.value = e.length, l === -1 && (l = e.length, f = !0), l && !isNaN(parseInt(l)) ? r.value = l : r.value = a.rowsPerPage[0], p.value = e.slice(0, l), f && (r.value = -1);
    }, I = (l, e) => (e = String(e).toLowerCase(), l.filter((d) => Object.entries(d).some((t) => String(t[1]).toLowerCase().includes(e))));
    S(
      () => y.value,
      (l, e) => {
        const d = I(m.data, l);
        V(r.value, d, l, !0);
      }
    );
    const C = (l = v.value) => {
      v.value = l;
      const e = (l - 1) * r.value, d = isNaN(parseInt(r.value)) ? 1 : parseInt(r.value);
      p.value = b.value.slice(e, e + d);
    };
    return A(() => {
      Array.isArray(a.rowsPerPage) ? (a.rowsPerPage = a.rowsPerPage.map((l) => parseInt(l)), a.rowsPerPage = a.rowsPerPage.filter((l) => !isNaN(l))) : a.rowsPerPage = [], (!(a != null && a.rowsPerPage) || a.rowsPerPage.length === 0) && (a.rowsPerPage = [10, 25, 50, -1]), r.value = a.rowsPerPage[0], V(r.value), a != null && a.allText || (a.allText = T.allText);
    }), (l, e) => {
      var d;
      return s(), o("div", {
        id: "vueLatestTable",
        class: B(u.defaultTheme ? "defaultTheme" : "")
      }, [
        n("div", j, [
          _(n("input", {
            type: "text",
            class: "searchBox",
            placeholder: u.searchPlaceholder ? u.searchPlaceholder : "",
            "onUpdate:modelValue": e[0] || (e[0] = (t) => y.value = t)
          }, null, 8, q), [
            [M, y.value]
          ])
        ]),
        n("table", E, [
          n("thead", null, [
            n("tr", null, [
              (s(!0), o(P, null, k(u.headers, (t) => (s(), o("th", {
                key: t.value
              }, c(t.text), 1))), 128))
            ])
          ]),
          n("tbody", null, [
            (s(!0), o(P, null, k(i(p), (t) => (s(), o("tr", {
              key: t.id
            }, [
              (s(!0), o(P, null, k(u.headers, (f) => (s(), o("td", {
                key: f.value
              }, c(t[f.value]), 1))), 128))
            ]))), 128))
          ])
        ]),
        i(p).length === 0 ? (s(), o("div", F, c(u.noData), 1)) : h("", !0),
        n("footer", null, [
          n("div", null, [
            (d = i(a)) != null && d.rowsPerPage ? (s(), o(P, { key: 0 }, [
              O(c(u.rowsPerPageText) + ": ", 1),
              _(n("select", {
                class: "rowsPerPage",
                "onUpdate:modelValue": e[1] || (e[1] = (t) => U(r) ? r.value = t : r = t),
                onChange: e[2] || (e[2] = (t) => V())
              }, [
                (s(!0), o(P, null, k(i(a).rowsPerPage, (t, f) => (s(), o(P, {
                  key: t.id
                }, [
                  t === -1 ? (s(), o("option", G, c(i(a).allText), 1)) : (s(), o(P, { key: 1 }, [
                    u.data.length >= t ? (s(), o("option", {
                      key: 0,
                      selected: f === 0
                    }, c(t), 9, H)) : h("", !0)
                  ], 64))
                ], 64))), 128))
              ], 544), [
                [R, i(r)]
              ])
            ], 64)) : h("", !0)
          ]),
          n("div", null, [
            n("p", null, c(i(D).start) + " - " + c(i(D).end) + " of " + c(g.value), 1),
            n("p", J, [
              v.value !== 1 ? (s(), o("label", {
                key: 0,
                onClick: e[3] || (e[3] = (t) => C(v.value - 1))
              }, "←")) : h("", !0),
              i(N) > 1 ? (s(), o("label", K, [
                _(n("select", {
                  "onUpdate:modelValue": e[4] || (e[4] = (t) => v.value = t),
                  onChange: e[5] || (e[5] = (t) => C())
                }, [
                  (s(!0), o(P, null, k(i(N), (t) => (s(), o("option", {
                    key: t.id
                  }, c(t), 1))), 128))
                ], 544), [
                  [R, v.value]
                ])
              ])) : h("", !0),
              v.value < i(N) ? (s(), o("label", {
                key: 2,
                onClick: e[6] || (e[6] = (t) => C(v.value + 1)),
                class: "ml"
              }, "→")) : h("", !0)
            ])
          ])
        ])
      ], 2);
    };
  }
}, X = /* @__PURE__ */ $(Q, [["__scopeId", "data-v-48137b16"]]);
export {
  X as VueLatestTable
};
